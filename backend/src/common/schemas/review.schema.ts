import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';import { Document, Types } from 'mongoose';export type ReviewDocument = Review & Document;@Schema({ timestamps: true })export class Review {  @Prop({ type: Types.ObjectId, ref: 'Product', required: true, index: true })  product: Types.ObjectId;  @Prop({ type: Types.ObjectId, ref: 'User', required: true, index: true })  customer: Types.ObjectId;  @Prop({ required: true, min: 1, max: 5 })  rating: number;  @Prop({ required: true, trim: true, maxlength: 100 })  title: string;  @Prop({ required: true, trim: true, maxlength: 1000 })  comment: string;  @Prop({ default: false })  verified: boolean;  @Prop([{ type: Types.ObjectId, ref: 'User' }])  helpfulVotes: Types.ObjectId[];  @Prop([{    userId: { type: Types.ObjectId, ref: 'User', required: true },    reason: { type: String, required: true },    reportedAt: { type: Date, default: Date.now }  }])  reports: Array<{    userId: Types.ObjectId;    reason: string;    reportedAt: Date;  }>;  @Prop({ default: false })  hidden: boolean;}export const ReviewSchema = SchemaFactory.createForClass(Review);// IndexesReviewSchema.index({ product: 1, customer: 1 }, { unique: true });ReviewSchema.index({ product: 1, rating: -1 });ReviewSchema.index({ createdAt: -1 });